package me.minoneer.bukkit.bookexploit;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.NullSource;
import org.junit.jupiter.params.provider.ValueSource;

import java.util.Arrays;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class WildcardMatcherTest {

    @ParameterizedTest
    @ValueSource(strings = {"test", "Test", "  test ", "tEST", "test1", ".", "?"})
    public void matchCorrectRegularStrings(String value) {
        WildcardMatcher matcher = new WildcardMatcher(Arrays.asList("test", "Test1", ".", "?"));
        assertTrue(matcher.matches(value));
    }

    @ParameterizedTest
    @ValueSource(strings = {"test1", "", " ", "!", "a", "*"})
    @NullSource
    public void matchIncorrectRegularStrings(String value) {
        WildcardMatcher matcher = new WildcardMatcher(Arrays.asList("test", ".", "?"));
        assertFalse(matcher.matches(value));
    }

    @ParameterizedTest
    @ValueSource(strings = {"test", "Test", "  test ", "tEST", "test1", "Test Two", "Tests", "foobar", "foo and bar"})
    public void matchCorrectWildcardStrings(String value) {
        WildcardMatcher matcher = new WildcardMatcher(Arrays.asList("test*", "Foo*Bar"));
        assertTrue(matcher.matches(value));
    }

    @ParameterizedTest
    @ValueSource(strings = {"1test", "", " ", "random", "Foo", "bar", "*"})
    @NullSource
    public void matchIncorrectWildcardStrings(String value) {
        WildcardMatcher matcher = new WildcardMatcher(Arrays.asList("test*", "Foo*Bar"));
        assertFalse(matcher.matches(value));
    }
}
