package me.minoneer.bukkit.bookexploit;

import org.bukkit.Material;
import org.bukkit.block.Block;
import org.bukkit.block.Lectern;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.inventory.ItemStack;
import org.jetbrains.annotations.NotNull;

import java.util.logging.Level;
import java.util.logging.Logger;

public final class LecternListener implements Listener {

    private final ConfigHandler config;
    private final BookFilter bookFilter;
    private final Logger logger;

    public LecternListener(final ConfigHandler config, final BookFilter bookFilter, final Logger logger) {
        this.config = config;
        this.bookFilter = bookFilter;
        this.logger = logger;
    }

    @EventHandler(priority = EventPriority.LOW)
    public void onLecternRead(@NotNull final PlayerInteractEvent event) {
        final Player player = event.getPlayer();
        if (event.getAction() != Action.RIGHT_CLICK_BLOCK) {
            return;
        }
        Block clickedBlock = event.getClickedBlock();
        if (clickedBlock == null || clickedBlock.getType() != Material.LECTERN) {
            return;
        }

        Lectern lectern = (Lectern) clickedBlock.getState();
        final ItemStack toFilter = lectern.getInventory().getItem(0);
        final ItemStack filtered = bookFilter.filterBook(toFilter, player, FilterAction.READ);

        if (filtered != null) {
            logger.log(Level.WARNING, "Player {0} {1} tried to read a lectern book with illegal click events!",
                    new Object[]{player.getName(), player.getUniqueId()});
            lectern.getInventory().setItem(0, filtered);

            if (config.getPlayerMessage() != null) {
                player.sendMessage(config.getPlayerMessage());
            }
        }
    }
}
